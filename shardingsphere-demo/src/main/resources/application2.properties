# 数据分片
# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=ds0,ds1

# 一个bean对应多个表
spring.main.allow-bean-definition-overriding=true

spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/course_db_1?useUnicode=true&characterEncoding=utf8\
  &useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456

spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/course_db_2?useUnicode=true&characterEncoding=utf8\
  &useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123456

spring.shardingsphere.sharding.tables.t_course.actual-data-nodes=ds$->{0..1}.t_course_$->{1..2}
spring.shardingsphere.sharding.tables.t_course.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_course.table-strategy.inline.algorithm-expression=t_course_$->{id % 2 + 1}
spring.shardingsphere.sharding.tables.t_course.key-generator.column=id
spring.shardingsphere.sharding.tables.t_course.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.binding-tables=t_course

spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}

#是否开启SQL显示，默认值: false
spring.shardingsphere.props.sql.show=true

#公共表的配置，比如字典表，公共表常用作关联查询，所以每个库中都存放一个公共字典表
spring.shardingsphere.sharding.broadcast-tables=t_dict
spring.shardingsphere.sharding.tables.t_dict.key-generator.column=id
spring.shardingsphere.sharding.tables.t_dict.key-generator.type=SNOWFLAKE